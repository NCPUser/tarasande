package net.tarasandedevelopment.tarasande_dupe_exploits

import com.google.common.collect.Lists
import it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap
import net.fabricmc.api.ClientModInitializer
import net.minecraft.client.MinecraftClient
import net.minecraft.client.gui.screen.ingame.InventoryScreen
import net.minecraft.client.gui.screen.ingame.LecternScreen
import net.minecraft.item.ItemStack
import net.minecraft.network.packet.c2s.play.ClickSlotC2SPacket
import net.minecraft.screen.slot.SlotActionType
import net.tarasandedevelopment.tarasande.TarasandeMain
import net.tarasandedevelopment.tarasande.event.EventSuccessfulLoad
import net.tarasandedevelopment.tarasande.system.screen.screenextensionsystem.ScreenExtensionButtonList
import net.tarasandedevelopment.tarasande.system.screen.screenextensionsystem.impl.ScreenExtensionButtonListHandledScreen
import su.mandora.event.EventDispatcher

class TarasandeDupeExploits : ClientModInitializer {

    override fun onInitializeClient() {
        EventDispatcher.add(EventSuccessfulLoad::class.java) {
            TarasandeMain.managerScreenExtension().apply {
                get(ScreenExtensionButtonListHandledScreen::class.java).apply {
                    add("Crafting dupe", { MinecraftClient.getInstance().currentScreen is InventoryScreen }) {
                        (MinecraftClient.getInstance().currentScreen as InventoryScreen).apply {
                            screenHandler.getSlot(0).also {
                                this.onMouseClick(it, it.id, 0, SlotActionType.THROW)
                            }
                        }
                    }
                }

                add(object : ScreenExtensionButtonList<LecternScreen>(LecternScreen::class.java) {
                    init {
                        add("Lectern crash") {
                            val screenHandler = MinecraftClient.getInstance().player!!.currentScreenHandler

                            val defaultedList = screenHandler.slots
                            val i = defaultedList.size

                            val list = Lists.newArrayListWithCapacity<ItemStack>(i)

                            for (slot in defaultedList) {
                                list.add(slot.stack.copy())
                            }

                            val int2ObjectMap = Int2ObjectOpenHashMap<ItemStack>()

                            for (slot2 in 0 until i) {
                                val stack = list[slot2]
                                val stackCopy = defaultedList[slot2].stack

                                if (!ItemStack.areEqual(stack, stackCopy))
                                    int2ObjectMap[slot2] = stackCopy.copy()
                            }

                            MinecraftClient.getInstance().networkHandler!!.connection.send(ClickSlotC2SPacket(screenHandler.syncId, screenHandler.revision, 0, 0, SlotActionType.QUICK_MOVE, screenHandler.cursorStack.copy(), int2ObjectMap))
                        }
                    }
                })
            }
        }
    }
}
