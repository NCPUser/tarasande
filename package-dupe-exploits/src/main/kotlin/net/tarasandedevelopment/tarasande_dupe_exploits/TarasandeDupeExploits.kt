package net.tarasandedevelopment.tarasande_dupe_exploits

import com.google.common.collect.Lists
import it.unimi.dsi.fastutil.ints.Int2ObjectArrayMap
import it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap
import net.fabricmc.api.ClientModInitializer
import net.minecraft.block.ShulkerBoxBlock
import net.minecraft.client.MinecraftClient
import net.minecraft.client.gui.screen.ingame.InventoryScreen
import net.minecraft.client.gui.screen.ingame.LecternScreen
import net.minecraft.client.gui.screen.ingame.ShulkerBoxScreen
import net.minecraft.item.ItemStack
import net.minecraft.network.packet.c2s.play.ClickSlotC2SPacket
import net.minecraft.network.packet.c2s.play.PlayerActionC2SPacket
import net.minecraft.screen.ShulkerBoxScreenHandler
import net.minecraft.screen.slot.SlotActionType
import net.minecraft.util.hit.BlockHitResult
import net.tarasandedevelopment.tarasande.TarasandeMain
import net.tarasandedevelopment.tarasande.event.EventPacket
import net.tarasandedevelopment.tarasande.event.EventSuccessfulLoad
import net.tarasandedevelopment.tarasande.event.EventUpdate
import net.tarasandedevelopment.tarasande.system.screen.screenextensionsystem.ScreenExtensionButtonList
import net.tarasandedevelopment.tarasande.system.screen.screenextensionsystem.impl.ScreenExtensionButtonListHandledScreen
import su.mandora.event.EventDispatcher

class TarasandeDupeExploits : ClientModInitializer {

    override fun onInitializeClient() {
        EventDispatcher.add(EventSuccessfulLoad::class.java) {
            TarasandeMain.managerScreenExtension().apply {
                get(ScreenExtensionButtonListHandledScreen::class.java).apply {
                    add("Crafting dupe", { MinecraftClient.getInstance().currentScreen is InventoryScreen }) {
                        (MinecraftClient.getInstance().currentScreen as InventoryScreen).apply {
                            screenHandler.getSlot(0).also {
                                this.onMouseClick(it, it.id, 0, SlotActionType.THROW)
                            }
                        }
                    }
                }

                add(object : ScreenExtensionButtonList<LecternScreen>(LecternScreen::class.java) {
                    init {
                        add("Lectern crash") {
                            val screenHandler = MinecraftClient.getInstance().player!!.currentScreenHandler

                            val defaultedList = screenHandler.slots
                            val i = defaultedList.size

                            val list = Lists.newArrayListWithCapacity<ItemStack>(i)

                            for (slot in defaultedList) {
                                list.add(slot.stack.copy())
                            }

                            val int2ObjectMap = Int2ObjectOpenHashMap<ItemStack>()

                            for (slot2 in 0 until i) {
                                val stack = list[slot2]
                                val stackCopy = defaultedList[slot2].stack

                                if (!ItemStack.areEqual(stack, stackCopy))
                                    int2ObjectMap[slot2] = stackCopy.copy()
                            }

                            MinecraftClient.getInstance().networkHandler!!.connection.send(ClickSlotC2SPacket(screenHandler.syncId, screenHandler.revision, 0, 0, SlotActionType.QUICK_MOVE, screenHandler.cursorStack.copy(), int2ObjectMap))
                        }
                    }
                })

                add(object : ScreenExtensionButtonList<ShulkerBoxScreen>(ShulkerBoxScreen::class.java) {
                    private var singleDupe = false
                    private var multiDupe = false

                    fun quickMoveItem(slot: Int) {
                        MinecraftClient.getInstance().player?.currentScreenHandler.apply {
                            if (this is ShulkerBoxScreenHandler) {
                                val stack = Int2ObjectArrayMap<ItemStack>()
                                stack[slot] = this.getSlot(slot).stack

                                MinecraftClient.getInstance().networkHandler?.sendPacket(ClickSlotC2SPacket(syncId, 0, slot, 0, SlotActionType.QUICK_MOVE, getSlot(0).stack, stack))
                            }
                        }
                    }

                    init {
                        add("Shulker dupe (single)") {
                            if (multiDupe) multiDupe = false
                            singleDupe = true
                        }
                        add("Shulker dupe (multi)") {
                            if (singleDupe) singleDupe = false
                            multiDupe = true
                        }

                        EventDispatcher.add(EventPacket::class.java) {
                            if (it.type == EventPacket.Type.SEND && it.packet is PlayerActionC2SPacket) {
                                if ((it.packet as PlayerActionC2SPacket).action == PlayerActionC2SPacket.Action.STOP_DESTROY_BLOCK) {
                                    if (singleDupe) {
                                        quickMoveItem(0)
                                        singleDupe = false
                                    } else if (multiDupe) {
                                        for (i in 0 .. 27) {
                                            quickMoveItem(i)
                                        }
                                        multiDupe = false
                                    }
                                }
                            }
                        }

                        EventDispatcher.add(EventUpdate::class.java) {
                            val isShulkerBox = MinecraftClient.getInstance().player?.currentScreenHandler is ShulkerBoxScreenHandler

                            if (singleDupe || multiDupe) {
                                MinecraftClient.getInstance().crosshairTarget.apply {
                                    if (this is BlockHitResult) {
                                        if (MinecraftClient.getInstance().world?.getBlockState(this.blockPos)?.block is ShulkerBoxBlock && isShulkerBox) {
                                            MinecraftClient.getInstance().interactionManager?.updateBlockBreakingProgress(this.blockPos, net.minecraft.util.math.Direction.DOWN)
                                        } else {
                                            TarasandeMain.notifications().notify("You need to have a shulker box screen open and look at a shulker box")
                                            MinecraftClient.getInstance().player?.closeHandledScreen()
                                            singleDupe = false
                                            multiDupe = false
                                        }
                                    }
                                }
                            }
                        }
                    }
                })
            }
        }
    }
}
