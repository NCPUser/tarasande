plugins {
    id "java"
    id "fabric-loom"
    id "org.jetbrains.kotlin.jvm"
    id "com.github.johnrengelman.shadow"
}

group 'net.tarasandedevelopment'
version tarasande_version

repositories {
    mavenCentral()
}

loom {
    accessWidenerPath = file("src/main/resources/tarasande-protocol-hack.accesswidener")
}

var viaLibs = [
        "com.viaversion:viaversion:${project.viaversion_version}",
        "com.viaversion:viabackwards-common:${project.viabackwards_version}",
        "org.yaml:snakeyaml:1.29",

        "com.github.FlorianMichael:ViaLoadingBase:${project.vialoadingbase_version}",

        "net.lenni0451.mcstructs:text:2.2.0"
]

this.remapJar {
    dependsOn shadowJar
    //noinspection GrDeprecatedAPIUsage
    input.set(shadowJar.archiveFile)
}

this.shadowJar {
    archiveClassifier.set("shadow")
    compileJava.options.encoding = "UTF-8"
    exclude "native-binaries/*"

    dependencies {
        for (final def lib in viaLibs) {
            include(dependency(lib))
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    implementation(project(path: ":", configuration: "shadow"))

    for (final def via in viaLibs) {
        implementation(via)
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

compileKotlin.kotlinOptions.jvmTarget = "17"
